{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButtonConnect","button","StyledButtonBusy","StyledButtonMint","ResponsiveWrapper","StyledLogo","img","StyledTwitter","StyledOpensea","StyledScroll","StyledLink","a","App","useDispatch","useSelector","useState","claimingFreeNft","setClaimingFreeNft","feedback","setFeedback","mintAmount","partySize","setPartySize","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getPartySize","party","pS","claimFreeNFTs","totalCostWei","String","knighted","estimateGas","from","gasLimitEstimate","eth","getGasPrice","gasPriceEstimate","resultOfGasPriceEstimate","send","gasLimit","Math","round","gasPrice","to","value","once","err","then","receipt","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","href","alt","src","delay","style","padding","backgroundColor","margin","borderRadius","width","paddingTop","paddingBottom","paddingLeft","paddingRight","marginRight","marginLeft","textAlign","fontSize","fontWeight","color","Number","target","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfe5a6be.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nimport React from 'react';\nimport WalletLink from \"walletlink\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n\n    const configResponse = await fetch(\"config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask, or click the Connect Coinbase Wallet Button.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport FadeIn from \"react-fade-in\";\n\nconst disconnectCoinbase = () => {\n  walletlinkProvider.close();\n  setWalletlinkProvider(null);\n};\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledButtonConnect = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  padding: 10px;\n  font-weight: bold;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  background-image: url(config/images/SiteBoxCnTPeas2.png);\n  background-repeat: no-repeat;\n  background-size: 100%;\n  height: 100px;\n  width: 200px;\n  background-color: transparent;\n`;\n\nexport const StyledButtonBusy = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  padding: 10px;\n  font-weight: bold;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  background-image: url(config/images/SiteBoxCnTConscrip.png);\n  background-repeat: no-repeat;\n  background-size: 100%;\n  height: 100px;\n  width: 200px;\n  background-color: transparent;\n`;\n\nexport const StyledButtonMint = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  padding: 10px;\n  font-weight: bold;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  background-image: url(config/images/SitemMintFree.png);\n  background-repeat: no-repeat;\n  background-size: 100%;\n  height: 100px;\n  width: 200px;\n  background-color: transparent;\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapperTwo = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 33%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  position: absolute;\n  z-index: 200;\n  left: 38%;\n  top: 32%;\n  width: 24%;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  position: absolute;\n  z-index: 100;\n  width: 15%;\n  left: 42.5%;\n  top: 3%;\n`;\n\nexport const StyledTwitter = styled.img`\n  position: absolute;\n  z-index: 200;\n  left: 3%;\n  top: 3%;\n  background: transparent;\n  width: 5%;\n`;\n\nexport const StyledOpensea = styled.img`\n  position: absolute;\n  z-index: 200;\n  left: 9%;\n  top: 3%;\n  background: transparent;\n  width: 5%;\n`;\n\nexport const StyledScroll = styled.img`\n  position: absolute;\n  z-index: 200;\n  right: 3%;\n  top: 10%;\n  background: transparent;\n  width: 35%;\n`;\n\nexport const StyledMintButton = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n  font-size: 32px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingFreeNft, setClaimingFreeNft] = useState(false);\n  const [feedback, setFeedback] = useState(``);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [partySize, setPartySize] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"Polygon\",\n      SYMBOL: \"MATIC\",\n      ID: 137,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 6942,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: true,\n  });\n\n  const getPartySize = async () => {\n\n    let pS = await blockchain.smartContract.methods.party(blockchain.account).call();\n    setPartySize(pS);\n  }\n\n  const claimFreeNFTs = async () => {\n    let totalCostWei = String(0);\n    console.log(\"FM Cost: \", totalCostWei);\n    setFeedback(`Minting your free ${CONFIG.NFT_NAME}...`);\n    setClaimingFreeNft(true);\n\n    await getPartySize();\n    \n    let gasLimitEstimate = await blockchain.smartContract.methods.knighted(mintAmount).estimateGas({from: blockchain.account});\n    console.log({\n      gasLimitEstimate: gasLimitEstimate,\n    });\n\n    let gasPriceEstimate = await blockchain.web3.eth.getGasPrice();\n\n    console.log({\n      resultOfGasPriceEstimate: gasPriceEstimate,\n    });\n\n    blockchain.smartContract.methods\n      .knighted(mintAmount)\n      .send({\n        gasLimit: String(Math.round(1.2 * gasLimitEstimate)),\n        gasPrice: String(Math.round(1.1 * gasPriceEstimate)),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Elves are goblins scorched us :*(\");\n        setClaimingFreeNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Huzzah! A new knight joined your party.`\n        );\n        setClaimingFreeNft(false);\n        dispatch(fetchData(blockchain.account));\n        setPartySize(partySize + mintAmount);\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = async () => {\n    if (partySize == 0 && mintAmount == 1) {\n      await getPartySize();\n    }\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    if (newMintAmount + partySize > 1) {\n      newMintAmount = 1 - partySize;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"./config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n\n      <a href=\"https://twitter.com/knightswtf\">\n        <StyledTwitter alt={\"twitter link\"} src={\"./config/images/twitter_social_cons_circle_white.png\"} />\n      </a>\n\n      <a href=\"https://opensea.io/collection/knightscastlewtf\">\n        <StyledOpensea alt={\"opensea link\"} src={\"./config/images/Opensea-Logomark-Transparent-White.png\"} />\n      </a>\n\n      <FadeIn delay={\"1000\"}>\n        <StyledScroll alt={\"logo\"} src={\"./config/images/SiteScroll1.png\"} href={\"https://twitter.com/knightswtf\"} />\n      </FadeIn>\n\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"./config/images/bgRoyMC.png\" : null}\n      >\n        <FadeIn delay={\"1000\"}>\n          <StyledLogo alt={\"logo\"} src={\"./config/images/LogoTransparent.png\"} />\n        </FadeIn>\n        <s.SpacerSmall />\n        \n            <ResponsiveWrapper flex={1} style={{ padding: 0, margin: 0,  }} test>\n              \n              <FadeIn delay={\"1000\"}>\n                <s.Container\n                  flex={2}\n                  jc={\"center\"}\n                  ai={\"center\"}\n                  style={{\n                    borderRadius: 24,\n                    width: \"95%\",\n                    paddingTop: 32,\n                    paddingBottom: 32,\n                    paddingLeft: \"3%\",\n                    paddingRight: \"3%\",\n                    marginRight: \"3%\",\n                    marginLeft: \"3%\",\n                  }}\n                  image={\"./config/images/SiteBoxTransparent.png\"}\n                >\n                  <s.SpacerSmall />\n                  <s.TextTitle\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: 42,\n                      fontWeight: \"bold\",\n                      color: \"var(--primary-text)\",\n                    }}\n                  >\n                    {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                  </s.TextTitle>\n                  {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                    <>\n                      <s.TextTitle\n                        style={{ textAlign: \"center\", color: \"var(--primary-text)\", fontSize: 20, paddingLeft: 50, paddingRight: 50, }}\n                      >\n                        Huzzah! That's enough conscripts to fight the foul beasts.\n                      </s.TextTitle>\n                      <s.TextDescription\n                        style={{ textAlign: \"center\", color: \"var(--primary-text)\", fontSize: 20, paddingLeft: 50, paddingRight: 50, }}\n                      >\n                        To hire a knight, gaze into yonder\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                        {CONFIG.MARKETPLACE}\n                      </StyledLink>\n                    </>\n                  ) : (\n\n                    <>\n                      <s.Container ai={\"center\"} jc={\"center\"} >\n\n                        {blockchain.account === \"\" ||\n                          blockchain.smartContract === null ? (\n                            <s.Container ai={\"center\"} jc={\"center\"}>\n                        \n                              <StyledButtonConnect src={\"./config/images/SiteCntMetaM.png\"}\n                                onClick={(e) => {\n                                e.preventDefault();\n                                dispatch(connect());\n                                getData();\n                                setFeedback(``);\n                                }}\n                              >\n                              </StyledButtonConnect>\n\n                              {blockchain.errorMsg !== \"\" ? (\n                              <>\n                                <s.SpacerSmall />\n                                <s.TextDescription\n                                  style={{\n                                    textAlign: \"center\",\n                                    color: \"var(--primary-text)\",\n                                  }}\n                                >\n                                {blockchain.errorMsg}\n                                </s.TextDescription>\n                              </>\n                              ) : null}\n                            </s.Container>\n                          ) : (\n                          <>\n\n                            {/* <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                              <StyledRoundButton\n                                style={{ lineHeight: 0.4 }}\n                                disabled={claimingFreeNft ? 1 : 0}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  decrementMintAmount();\n                                }}\n                              >\n                              -\n                              </StyledRoundButton>\n                              <s.SpacerMedium />\n                              <s.TextDescription\n                                style={{\n                                  textAlign: \"center\",\n                                  color: \"var(--accent-text)\",\n                                }}\n                              >\n                              {mintAmount}\n                              </s.TextDescription>\n                              <s.SpacerMedium />\n                              <StyledRoundButton\n                                disabled={claimingFreeNft ? 1 : 0}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  incrementMintAmount();\n                                }}\n                              >\n                              +\n                              </StyledRoundButton>\n                            </s.Container> */}\n\n                            <s.SpacerSmall />\n                                <s.TextDescription\n                                  style={{\n                                    textAlign: \"center\",\n                                    color: \"var(--primary-text)\",\n                                  }}\n                                >\n                                </s.TextDescription>\n                            {partySize < 1 ? (\n                                <s.Container ai={\"center\"} jc={\"center\"} >\n                                {claimingFreeNft === false ? (\n                                    <>\n                                      <StyledButtonMint\n                                        disabled={claimingFreeNft ? 1 : 0}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          claimFreeNFTs();\n                                          getData();\n                                        }}\n                                      >\n                                      </StyledButtonMint>\n                                    </>\n                                  ) : (\n                                    <>\n                                      <StyledButtonBusy\n                                        disabled={1}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          claimFreeNFTs();\n                                          getData();\n                                        }}\n                                      >\n                                  \n                                      </StyledButtonBusy>\n                                    </>\n                                  )\n                                }\n                              </s.Container>\n                            ) : (\n                              <s.TextDescription\n                                  style={{\n                                    textAlign: \"center\",\n                                    color: \"var(--primary-text)\",\n                                  }}\n                                >\n                                  Fellowship achieved. To collect more, visit opensea.\n                                </s.TextDescription>\n                            )}\n                          </>\n                          )\n                        }\n                      </s.Container>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--primary-text)\",\n                          fontSize: 28,\n                          paddingLeft: 50,\n                          paddingRight: 50,\n                        }}\n                      >\n                      {feedback}\n                      </s.TextDescription>\n                      <s.SpacerLarge />\n                      \n                      \n                    </>\n                  )}\n\n                </s.Container>\n              </FadeIn>\n              \n            </ResponsiveWrapper>\n          \n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}