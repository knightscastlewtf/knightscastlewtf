{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","smartContractWeth","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectSuccess","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledMintButton","StyledLink","a","App","useDispatch","useSelector","useState","claimingNftPublic","claimingFreeNft","setClaimingFreeNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","Number","target","href","disabled","onClick","e","preventDefault","gasLimit","totalCostWei","String","totalGasLimit","freeMint","send","to","from","value","once","err","then","receipt","claimFreeNFTs","abiResponse","abi","abiWethResponse","abiWeth","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContractObjWeth","CONTRACT_ADDRESS_WETH","on","location","reload","lineHeight","newMintAmount","decrementMintAmount","incrementMintAmount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c12b42.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  smartContractWeth: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        smartContractWeth: action.payload.smartContractWeth,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nimport React from 'react';\nimport WalletLink from \"walletlink\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n\n    const abiWethResponse = await fetch(\"config/abiWeth.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abiWeth = await abiWethResponse.json();\n\n    const configResponse = await fetch(\"config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          const SmartContractObjWeth = new Web3EthContract(\n            abiWeth,\n            CONFIG.CONTRACT_ADDRESS_WETH\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              smartContractWeth: SmartContractObjWeth,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask, or click the Connect Coinbase Wallet Button.\"));\n    }\n  };\n};\n\nexport const connectCoinbase = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n\n    const abiWethResponse = await fetch(\"config/abiWeth.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abiWeth = await abiWethResponse.json();\n\n    const configResponse = await fetch(\"config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    try {\n      // Initialize Walletlink\n      const walletLink = new WalletLink({\n        appName: 'demo-app',\n        darkMode: true\n      });\n      console.log(\"Instantiated WalletLink object\");\n\n      const provider = walletLink.makeWeb3Provider('https://rinkeby.infura.io/v3/55d040fb60064deaa7acc8e320d99bd4', 4);\n      //setWalletlinkProvider(provider);\n      const accounts = await provider.request({\n        method: 'eth_requestAccounts'\n      });\n      const networkId = await ethereum.request({\n        method: \"net_version\",\n      });\n      console.log(\"requested accounts\");\n      if (networkId == CONFIG.NETWORK.ID) {\n        console.log(\"connected to correct network (good)\");\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n        const SmartContractObjWeth = new Web3EthContract(\n          abiWeth,\n          CONFIG.CONTRACT_ADDRESS_WETH\n        );\n        console.log(\"Instantiated Web3EthContract object\");\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            smartContractWeth: SmartContractObjWeth,\n            web3: web3,\n          })\n        );\n      // Add listeners start\n      ethereum.on(\"accountsChanged\", (accounts) => {\n        console.log(\"changing accounts\");\n        dispatch(updateAccount(accounts[0]));\n      });\n      ethereum.on(\"chainChanged\", () => {\n        console.log(\"changed chain so reloading\");\n        window.location.reload();\n      });\n    // Add listeners end\n    } else {\n      dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n    }\n    } catch (err) {\n        console.log(err);\n        dispatch(connectFailed(\"Something went wrong.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect, connectCoinbase } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst disconnectCoinbase = () => {\n  walletlinkProvider.close();\n  setWalletlinkProvider(null);\n};\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 40%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledMintButton = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px var(--secondary);\n  background-color: var(--accent);\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNftPublic, setClaimingNftPublic] = useState(false);\n  const [claimingNftPublicWeth, setClaimingNftPublicWeth] = useState(false);\n  const [claimingNftV2Holder, setClaimingNftV2Holder] = useState(false);\n  const [claimingNftV2HolderWeth, setClaimingNftV2HolderWeth] = useState(false);\n  const [claimingFreeNft, setClaimingFreeNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"Rinkeby\",\n      SYMBOL: \"ETH\",\n      ID: 4,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 6942,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: true,\n  });\n\n  const claimFreeNFTs = () => {\n    let cost = 0;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(0);\n    let totalGasLimit = String(gasLimit);\n    console.log(\"FM Cost: \", totalCostWei);\n    console.log(\"FM Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your free ${CONFIG.NFT_NAME}...`);\n    setClaimingFreeNft(true);\n    blockchain.smartContract.methods\n      .freeMint()\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry3, something went wrong please try again later.\");\n        setClaimingFreeNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Wohoo! You free minted a ${CONFIG.NFT_NAME}! Go visit Opensea.io to view it.`\n        );\n        setClaimingFreeNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 8) {\n      newMintAmount = 8;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"./config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"./config/images/bg1.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"./config/images/LogoTransparent.png\"} />\n        <s.SpacerSmall />\n\n        <StyledMintButton alt={\"mint\"} src={\"./config/images/SitemMintFree.png\"} />\n\n        <ResponsiveWrapper src={\"./config/images/SiteBox.png\"} flex={1} style={{ padding: 24 }} test>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingFreeNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimFreeNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingFreeNft ? \"BUSY\" : \"FREE MINT\"}\n                      </StyledButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                <s.SpacerXSmall />\n\n                    <s.SpacerSmall />\n                <s.SpacerXSmall />\n                \n                    <s.SpacerSmall />\n                <s.SpacerXSmall />\n\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT (METAMASK)\n                    </StyledButton>\n\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNftPublic ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNftPublic ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.SpacerSmall />\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}